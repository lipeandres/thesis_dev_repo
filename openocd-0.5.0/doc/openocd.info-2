This is openocd.info, produced by makeinfo version 4.13 from
openocd.texi.

INFO-DIR-SECTION Development
START-INFO-DIR-ENTRY
* OpenOCD: (openocd).      OpenOCD User's Guide
END-INFO-DIR-ENTRY


This User's Guide documents release 0.5.0, dated 9 August 2011, of the
Open On-Chip Debugger (OpenOCD).

   * Copyright (C) 2008 The OpenOCD Project

   * Copyright (C) 2007-2008 Spencer Oliver <spen@spen-soft.co.uk>

   * Copyright (C) 2008-2010 Oyvind Harboe <oyvind.harboe@zylin.com>

   * Copyright (C) 2008 Duane Ellis <openocd@duaneellis.com>

   * Copyright (C) 2009-2010 David Brownell

     Permission is granted to copy, distribute and/or modify this
     document under the terms of the GNU Free Documentation License,
     Version 1.2 or any later version published by the Free Software
     Foundation; with no Invariant Sections, with no Front-Cover Texts,
     and with no Back-Cover Texts.  A copy of the license is included
     in the section entitled "GNU Free Documentation License".


File: openocd.info,  Node: Tcl Crash Course,  Next: License,  Prev: FAQ,  Up: Top

23 Tcl Crash Course
*******************

Not everyone knows Tcl - this is not intended to be a replacement for
learning Tcl, the intent of this chapter is to give you some idea of
how the Tcl scripts work.

This chapter is written with two audiences in mind. (1) OpenOCD users
who need to understand a bit more of how Jim-Tcl works so they can do
something useful, and (2) those that want to add a new command to
OpenOCD.

23.1 Tcl Rule #1
================

There is a famous joke, it goes like this:
  1. Rule #1: The wife is always correct

  2. Rule #2: If you think otherwise, See Rule #1

The Tcl equal is this:

  1. Rule #1: Everything is a string

  2. Rule #2: If you think otherwise, See Rule #1

As in the famous joke, the consequences of Rule #1 are profound. Once
you understand Rule #1, you will understand Tcl.

23.2 Tcl Rule #1b
=================

There is a second pair of rules.
  1. Rule #1: Control flow does not exist. Only commands
     For example: the classic FOR loop or IF statement is not a control
     flow item, they are commands, there is no such thing as control
     flow in Tcl.

  2. Rule #2: If you think otherwise, See Rule #1
     Actually what happens is this: There are commands that by
     convention, act like control flow key words in other languages.
     One of those commands is the word "for", another command is "if".

23.3 Per Rule #1 - All Results are strings
==========================================

Every Tcl command results in a string. The word "result" is used
deliberatly. No result is just an empty string. Remember: Rule #1 -
Everything is a string

23.4 Tcl Quoting Operators
==========================

In life of a Tcl script, there are two important periods of time, the
difference is subtle.
  1. Parse Time

  2. Evaluation Time

The two key items here are how "quoted things" work in Tcl. Tcl has
three primary quoting constructs, the [square-brackets] the
{curly-braces} and "double-quotes"

By now you should know $VARIABLES always start with a $DOLLAR sign.
BTW: To set a variable, you actually use the command "set", as in "set
VARNAME VALUE" much like the ancient BASIC langauge "let x = 1"
statement, but without the equal sign.

   * [square-brackets]
     [square-brackets] are command substitutions. It operates much like
     Unix Shell `back-ticks`. The result of a [square-bracket]
     operation is exactly 1 string. Remember Rule #1 - Everything is a
     string. These two statements are roughly identical:
              # bash example
              X=`date`
              echo "The Date is: $X"
              # Tcl example
              set X [date]
              puts "The Date is: $X"

   * "double-quoted-things"
     "double-quoted-things" are just simply quoted text. $VARIABLES and
     [square-brackets] are expanded in place - the result however is
     exactly 1 string. Remember Rule #1 - Everything is a string
              set x "Dinner"
              puts "It is now \"[date]\", $x is in 1 hour"

   * {Curly-Braces}
     {Curly-Braces} are magic: $VARIABLES and [square-brackets] are
     parsed, but are NOT expanded or executed. {Curly-Braces} are like
     'single-quote' operators in BASH shell scripts, with the added
     feature: {curly-braces} can be nested, single quotes can not.
     {{{this is nested 3 times}}} NOTE: [date] is a bad example; at
     this writing, Jim/OpenOCD does not have a date command.

23.5 Consequences of Rule 1/2/3/4
=================================

The consequences of Rule 1 are profound.

23.5.1 Tokenisation & Execution.
--------------------------------

Of course, whitespace, blank lines and #comment lines are handled in
the normal way.

As a script is parsed, each (multi) line in the script file is
tokenised and according to the quoting rules. After tokenisation, that
line is immedatly executed.

Multi line statements end with one or more "still-open" {curly-braces}
which - eventually - closes a few lines later.

23.5.2 Command Execution
------------------------

Remember earlier: There are no "control flow" statements in Tcl.
Instead there are COMMANDS that simply act like control flow operators.

Commands are executed like this:

  1. Parse the next line into (argc) and (argv[]).

  2. Look up (argv[0]) in a table and call its function.

  3. Repeat until End Of File.

It sort of works like this:
         for(;;){
             ReadAndParse( &argc, &argv );

             cmdPtr = LookupCommand( argv[0] );

             (*cmdPtr->Execute)( argc, argv );
         }

When the command "proc" is parsed (which creates a procedure function)
it gets 3 parameters on the command line. 1 the name of the proc
(function), 2 the list of parameters, and 3 the body of the function.
Not the choice of words: LIST and BODY. The PROC command stores these
items in a table somewhere so it can be found by "LookupCommand()"

23.5.3 The FOR command
----------------------

The most interesting command to look at is the FOR command.  In Tcl,
the FOR command is normally implemented in C. Remember, FOR is a
command just like any other command.

When the ascii text containing the FOR command is parsed, the parser
produces 5 parameter strings, (If in doubt: Refer to Rule #1) they are:

  0. The ascii text 'for'

  1. The start text

  2. The test expression

  3. The next text

  4. The body text

Sort of reminds you of "main( int argc, char **argv )" does it not?
Remember Rule #1 - Everything is a string. The key point is this: Often
many of those parameters are in {curly-braces} - thus the variables
inside are not expanded or replaced until later.

Remember that every Tcl command looks like the classic "main( argc,
argv )" function in C. In JimTCL - they actually look like this:

     int
     MyCommand( Jim_Interp *interp,
                int *argc,
                Jim_Obj * const *argvs );

Real Tcl is nearly identical. Although the newer versions have
introduced a byte-code parser and intepreter, but at the core, it still
operates in the same basic way.

23.5.4 FOR command implementation
---------------------------------

To understand Tcl it is perhaps most helpful to see the FOR command.
Remember, it is a COMMAND not a control flow structure.

In Tcl there are two underlying C helper functions.

Remember Rule #1 - You are a string.

The first helper parses and executes commands found in an ascii string.
Commands can be seperated by semicolons, or newlines. While parsing,
variables are expanded via the quoting rules.

The second helper evaluates an ascii string as a numerical expression
and returns a value.

Here is an example of how the FOR command could be implemented. The
pseudo code below does not show error handling.
     void Execute_AsciiString( void *interp, const char *string );

     int Evaluate_AsciiExpression( void *interp, const char *string );

     int
     MyForCommand( void *interp,
                   int argc,
                   char **argv )
     {
        if( argc != 5 ){
            SetResult( interp, "WRONG number of parameters");
            return ERROR;
        }

        // argv[0] = the ascii string just like C

        // Execute the start statement.
        Execute_AsciiString( interp, argv[1] );

        // Top of loop test
        for(;;){
             i = Evaluate_AsciiExpression(interp, argv[2]);
             if( i == 0 )
                 break;

             // Execute the body
             Execute_AsciiString( interp, argv[3] );

             // Execute the LOOP  part
             Execute_AsciiString( interp, argv[4] );
         }

         // Return no error
         SetResult( interp, "" );
         return SUCCESS;
     }

Every other command IF, WHILE, FORMAT, PUTS, EXPR, everything works in
the same basic way.

23.6 OpenOCD Tcl Usage
======================

23.6.1 source and find commands
-------------------------------

Where: In many configuration files
Example:  source [find FILENAME]
Remember the parsing rules
  1. The `find' command is in square brackets, and is executed with the
     parameter FILENAME. It should find and return the full path to a
     file with that name; it uses an internal search path.  The RESULT
     is a string, which is substituted into the command line in place
     of the bracketed `find' command.  (Don't try to use a FILENAME
     which includes the "#" character.  That character begins Tcl
     comments.)

  2. The `source' command is executed with the resulting filename; it
     reads a file and executes as a script.

23.6.2 format command
---------------------

Where: Generally occurs in numerous places.
Tcl has no command like printf(), instead it has format, which is
really more like sprintf().  Example
         set x 6
         set y 7
         puts [format "The answer: %d" [expr $x * $y]]

  1. The SET command creates 2 variables, X and Y.

  2. The double [nested] EXPR command performs math
     The EXPR command produces numerical result as a string.
     Refer to Rule #1

  3. The format command is executed, producing a single string
     Refer to Rule #1.

  4. The PUTS command outputs the text.

23.6.3 Body or Inlined Text
---------------------------

Where: Various TARGET scripts.
     #1 Good
        proc someproc {} {
            ... multiple lines of stuff ...
        }
        $_TARGETNAME configure -event FOO  someproc
     #2 Good - no variables
        $_TARGETNAME confgure -event foo "this ; that;"
     #3 Good Curly Braces
        $_TARGETNAME configure -event FOO {
             puts "Time: [date]"
        }
     #4 DANGER DANGER DANGER
        $_TARGETNAME configure -event foo "puts \"Time: [date]\""

  1. The $_TARGETNAME is an OpenOCD variable convention.
     $_TARGETNAME represents the last target created, the value changes
     each time a new target is created. Remember the parsing rules. When
     the ascii text is parsed, the $_TARGETNAME becomes a simple string,
     the name of the target which happens to be a TARGET (object)
     command.

  2. The 2nd parameter to the `-event' parameter is a TCBODY
     There are 4 examples:
       1. The TCLBODY is a simple string that happens to be a proc name

       2. The TCLBODY is several simple commands seperated by semicolons

       3. The TCLBODY is a multi-line {curly-brace} quoted string

       4. The TCLBODY is a string with variables that get expanded.

     In the end, when the target event FOO occurs the TCLBODY is
     evaluated. Method #1 and #2 are functionally identical.  For
     Method #3 and #4 it is more interesting. What is the TCLBODY?

     Remember the parsing rules. In case #3, {curly-braces} mean the
     $VARS and [square-brackets] are expanded later, when the EVENT
     occurs, and the text is evaluated. In case #4, they are replaced
     before the "Target Object Command" is executed. This occurs at the
     same time $_TARGETNAME is replaced. In case #4 the date will never
     change. {BTW: [date] is a bad example; at this writing,
     Jim/OpenOCD does not have a date command}

23.6.4 Global Variables
-----------------------

Where: You might discover this when writing your own procs
In simple terms: Inside a PROC, if you need to access a global variable
you must say so. See also "upvar". Example:
     proc myproc { } {
          set y 0  #Local variable Y
          global x #Global variable X
          puts [format "X=%d, Y=%d" $x $y]
     }

23.7 Other Tcl Hacks
====================

Dynamic variable creation
     # Dynamically create a bunch of variables.
     for { set x 0  } { $x < 32 } { set x [expr $x + 1]} {
         # Create var name
         set vn [format "BIT%d" $x]
         # Make it a global
         global $vn
         # Set it.
         set $vn   [expr (1 << $x)]
     }
Dynamic proc/command creation
     # One "X" function - 5 uart functions.
     foreach who {A B C D E}
        proc [format "show_uart%c" $who] { } "show_UARTx $who"
     }


File: openocd.info,  Node: License,  Next: OpenOCD Concept Index,  Prev: Tcl Crash Course,  Up: Top

Appendix A The GNU Free Documentation License.
**********************************************

                      Version 1.2, November 2002

     Copyright (C) 2000,2001,2002 Free Software Foundation, Inc.
     51 Franklin St, Fifth Floor, Boston, MA  02110-1301, USA

     Everyone is permitted to copy and distribute verbatim copies
     of this license document, but changing it is not allowed.

  0. PREAMBLE

     The purpose of this License is to make a manual, textbook, or other
     functional and useful document "free" in the sense of freedom: to
     assure everyone the effective freedom to copy and redistribute it,
     with or without modifying it, either commercially or
     noncommercially.  Secondarily, this License preserves for the
     author and publisher a way to get credit for their work, while not
     being considered responsible for modifications made by others.

     This License is a kind of "copyleft", which means that derivative
     works of the document must themselves be free in the same sense.
     It complements the GNU General Public License, which is a copyleft
     license designed for free software.

     We have designed this License in order to use it for manuals for
     free software, because free software needs free documentation: a
     free program should come with manuals providing the same freedoms
     that the software does.  But this License is not limited to
     software manuals; it can be used for any textual work, regardless
     of subject matter or whether it is published as a printed book.
     We recommend this License principally for works whose purpose is
     instruction or reference.

  1. APPLICABILITY AND DEFINITIONS

     This License applies to any manual or other work, in any medium,
     that contains a notice placed by the copyright holder saying it
     can be distributed under the terms of this License.  Such a notice
     grants a world-wide, royalty-free license, unlimited in duration,
     to use that work under the conditions stated herein.  The
     "Document", below, refers to any such manual or work.  Any member
     of the public is a licensee, and is addressed as "you".  You
     accept the license if you copy, modify or distribute the work in a
     way requiring permission under copyright law.

     A "Modified Version" of the Document means any work containing the
     Document or a portion of it, either copied verbatim, or with
     modifications and/or translated into another language.

     A "Secondary Section" is a named appendix or a front-matter section
     of the Document that deals exclusively with the relationship of the
     publishers or authors of the Document to the Document's overall
     subject (or to related matters) and contains nothing that could
     fall directly within that overall subject.  (Thus, if the Document
     is in part a textbook of mathematics, a Secondary Section may not
     explain any mathematics.)  The relationship could be a matter of
     historical connection with the subject or with related matters, or
     of legal, commercial, philosophical, ethical or political position
     regarding them.

     The "Invariant Sections" are certain Secondary Sections whose
     titles are designated, as being those of Invariant Sections, in
     the notice that says that the Document is released under this
     License.  If a section does not fit the above definition of
     Secondary then it is not allowed to be designated as Invariant.
     The Document may contain zero Invariant Sections.  If the Document
     does not identify any Invariant Sections then there are none.

     The "Cover Texts" are certain short passages of text that are
     listed, as Front-Cover Texts or Back-Cover Texts, in the notice
     that says that the Document is released under this License.  A
     Front-Cover Text may be at most 5 words, and a Back-Cover Text may
     be at most 25 words.

     A "Transparent" copy of the Document means a machine-readable copy,
     represented in a format whose specification is available to the
     general public, that is suitable for revising the document
     straightforwardly with generic text editors or (for images
     composed of pixels) generic paint programs or (for drawings) some
     widely available drawing editor, and that is suitable for input to
     text formatters or for automatic translation to a variety of
     formats suitable for input to text formatters.  A copy made in an
     otherwise Transparent file format whose markup, or absence of
     markup, has been arranged to thwart or discourage subsequent
     modification by readers is not Transparent.  An image format is
     not Transparent if used for any substantial amount of text.  A
     copy that is not "Transparent" is called "Opaque".

     Examples of suitable formats for Transparent copies include plain
     ASCII without markup, Texinfo input format, LaTeX input format,
     SGML or XML using a publicly available DTD, and
     standard-conforming simple HTML, PostScript or PDF designed for
     human modification.  Examples of transparent image formats include
     PNG, XCF and JPG.  Opaque formats include proprietary formats that
     can be read and edited only by proprietary word processors, SGML or
     XML for which the DTD and/or processing tools are not generally
     available, and the machine-generated HTML, PostScript or PDF
     produced by some word processors for output purposes only.

     The "Title Page" means, for a printed book, the title page itself,
     plus such following pages as are needed to hold, legibly, the
     material this License requires to appear in the title page.  For
     works in formats which do not have any title page as such, "Title
     Page" means the text near the most prominent appearance of the
     work's title, preceding the beginning of the body of the text.

     A section "Entitled XYZ" means a named subunit of the Document
     whose title either is precisely XYZ or contains XYZ in parentheses
     following text that translates XYZ in another language.  (Here XYZ
     stands for a specific section name mentioned below, such as
     "Acknowledgements", "Dedications", "Endorsements", or "History".)
     To "Preserve the Title" of such a section when you modify the
     Document means that it remains a section "Entitled XYZ" according
     to this definition.

     The Document may include Warranty Disclaimers next to the notice
     which states that this License applies to the Document.  These
     Warranty Disclaimers are considered to be included by reference in
     this License, but only as regards disclaiming warranties: any other
     implication that these Warranty Disclaimers may have is void and
     has no effect on the meaning of this License.

  2. VERBATIM COPYING

     You may copy and distribute the Document in any medium, either
     commercially or noncommercially, provided that this License, the
     copyright notices, and the license notice saying this License
     applies to the Document are reproduced in all copies, and that you
     add no other conditions whatsoever to those of this License.  You
     may not use technical measures to obstruct or control the reading
     or further copying of the copies you make or distribute.  However,
     you may accept compensation in exchange for copies.  If you
     distribute a large enough number of copies you must also follow
     the conditions in section 3.

     You may also lend copies, under the same conditions stated above,
     and you may publicly display copies.

  3. COPYING IN QUANTITY

     If you publish printed copies (or copies in media that commonly
     have printed covers) of the Document, numbering more than 100, and
     the Document's license notice requires Cover Texts, you must
     enclose the copies in covers that carry, clearly and legibly, all
     these Cover Texts: Front-Cover Texts on the front cover, and
     Back-Cover Texts on the back cover.  Both covers must also clearly
     and legibly identify you as the publisher of these copies.  The
     front cover must present the full title with all words of the
     title equally prominent and visible.  You may add other material
     on the covers in addition.  Copying with changes limited to the
     covers, as long as they preserve the title of the Document and
     satisfy these conditions, can be treated as verbatim copying in
     other respects.

     If the required texts for either cover are too voluminous to fit
     legibly, you should put the first ones listed (as many as fit
     reasonably) on the actual cover, and continue the rest onto
     adjacent pages.

     If you publish or distribute Opaque copies of the Document
     numbering more than 100, you must either include a
     machine-readable Transparent copy along with each Opaque copy, or
     state in or with each Opaque copy a computer-network location from
     which the general network-using public has access to download
     using public-standard network protocols a complete Transparent
     copy of the Document, free of added material.  If you use the
     latter option, you must take reasonably prudent steps, when you
     begin distribution of Opaque copies in quantity, to ensure that
     this Transparent copy will remain thus accessible at the stated
     location until at least one year after the last time you
     distribute an Opaque copy (directly or through your agents or
     retailers) of that edition to the public.

     It is requested, but not required, that you contact the authors of
     the Document well before redistributing any large number of
     copies, to give them a chance to provide you with an updated
     version of the Document.

  4. MODIFICATIONS

     You may copy and distribute a Modified Version of the Document
     under the conditions of sections 2 and 3 above, provided that you
     release the Modified Version under precisely this License, with
     the Modified Version filling the role of the Document, thus
     licensing distribution and modification of the Modified Version to
     whoever possesses a copy of it.  In addition, you must do these
     things in the Modified Version:

       A. Use in the Title Page (and on the covers, if any) a title
          distinct from that of the Document, and from those of
          previous versions (which should, if there were any, be listed
          in the History section of the Document).  You may use the
          same title as a previous version if the original publisher of
          that version gives permission.

       B. List on the Title Page, as authors, one or more persons or
          entities responsible for authorship of the modifications in
          the Modified Version, together with at least five of the
          principal authors of the Document (all of its principal
          authors, if it has fewer than five), unless they release you
          from this requirement.

       C. State on the Title page the name of the publisher of the
          Modified Version, as the publisher.

       D. Preserve all the copyright notices of the Document.

       E. Add an appropriate copyright notice for your modifications
          adjacent to the other copyright notices.

       F. Include, immediately after the copyright notices, a license
          notice giving the public permission to use the Modified
          Version under the terms of this License, in the form shown in
          the Addendum below.

       G. Preserve in that license notice the full lists of Invariant
          Sections and required Cover Texts given in the Document's
          license notice.

       H. Include an unaltered copy of this License.

       I. Preserve the section Entitled "History", Preserve its Title,
          and add to it an item stating at least the title, year, new
          authors, and publisher of the Modified Version as given on
          the Title Page.  If there is no section Entitled "History" in
          the Document, create one stating the title, year, authors,
          and publisher of the Document as given on its Title Page,
          then add an item describing the Modified Version as stated in
          the previous sentence.

       J. Preserve the network location, if any, given in the Document
          for public access to a Transparent copy of the Document, and
          likewise the network locations given in the Document for
          previous versions it was based on.  These may be placed in
          the "History" section.  You may omit a network location for a
          work that was published at least four years before the
          Document itself, or if the original publisher of the version
          it refers to gives permission.

       K. For any section Entitled "Acknowledgements" or "Dedications",
          Preserve the Title of the section, and preserve in the
          section all the substance and tone of each of the contributor
          acknowledgements and/or dedications given therein.

       L. Preserve all the Invariant Sections of the Document,
          unaltered in their text and in their titles.  Section numbers
          or the equivalent are not considered part of the section
          titles.

       M. Delete any section Entitled "Endorsements".  Such a section
          may not be included in the Modified Version.

       N. Do not retitle any existing section to be Entitled
          "Endorsements" or to conflict in title with any Invariant
          Section.

       O. Preserve any Warranty Disclaimers.

     If the Modified Version includes new front-matter sections or
     appendices that qualify as Secondary Sections and contain no
     material copied from the Document, you may at your option
     designate some or all of these sections as invariant.  To do this,
     add their titles to the list of Invariant Sections in the Modified
     Version's license notice.  These titles must be distinct from any
     other section titles.

     You may add a section Entitled "Endorsements", provided it contains
     nothing but endorsements of your Modified Version by various
     parties--for example, statements of peer review or that the text
     has been approved by an organization as the authoritative
     definition of a standard.

     You may add a passage of up to five words as a Front-Cover Text,
     and a passage of up to 25 words as a Back-Cover Text, to the end
     of the list of Cover Texts in the Modified Version.  Only one
     passage of Front-Cover Text and one of Back-Cover Text may be
     added by (or through arrangements made by) any one entity.  If the
     Document already includes a cover text for the same cover,
     previously added by you or by arrangement made by the same entity
     you are acting on behalf of, you may not add another; but you may
     replace the old one, on explicit permission from the previous
     publisher that added the old one.

     The author(s) and publisher(s) of the Document do not by this
     License give permission to use their names for publicity for or to
     assert or imply endorsement of any Modified Version.

  5. COMBINING DOCUMENTS

     You may combine the Document with other documents released under
     this License, under the terms defined in section 4 above for
     modified versions, provided that you include in the combination
     all of the Invariant Sections of all of the original documents,
     unmodified, and list them all as Invariant Sections of your
     combined work in its license notice, and that you preserve all
     their Warranty Disclaimers.

     The combined work need only contain one copy of this License, and
     multiple identical Invariant Sections may be replaced with a single
     copy.  If there are multiple Invariant Sections with the same name
     but different contents, make the title of each such section unique
     by adding at the end of it, in parentheses, the name of the
     original author or publisher of that section if known, or else a
     unique number.  Make the same adjustment to the section titles in
     the list of Invariant Sections in the license notice of the
     combined work.

     In the combination, you must combine any sections Entitled
     "History" in the various original documents, forming one section
     Entitled "History"; likewise combine any sections Entitled
     "Acknowledgements", and any sections Entitled "Dedications".  You
     must delete all sections Entitled "Endorsements."

  6. COLLECTIONS OF DOCUMENTS

     You may make a collection consisting of the Document and other
     documents released under this License, and replace the individual
     copies of this License in the various documents with a single copy
     that is included in the collection, provided that you follow the
     rules of this License for verbatim copying of each of the
     documents in all other respects.

     You may extract a single document from such a collection, and
     distribute it individually under this License, provided you insert
     a copy of this License into the extracted document, and follow
     this License in all other respects regarding verbatim copying of
     that document.

  7. AGGREGATION WITH INDEPENDENT WORKS

     A compilation of the Document or its derivatives with other
     separate and independent documents or works, in or on a volume of
     a storage or distribution medium, is called an "aggregate" if the
     copyright resulting from the compilation is not used to limit the
     legal rights of the compilation's users beyond what the individual
     works permit.  When the Document is included in an aggregate, this
     License does not apply to the other works in the aggregate which
     are not themselves derivative works of the Document.

     If the Cover Text requirement of section 3 is applicable to these
     copies of the Document, then if the Document is less than one half
     of the entire aggregate, the Document's Cover Texts may be placed
     on covers that bracket the Document within the aggregate, or the
     electronic equivalent of covers if the Document is in electronic
     form.  Otherwise they must appear on printed covers that bracket
     the whole aggregate.

  8. TRANSLATION

     Translation is considered a kind of modification, so you may
     distribute translations of the Document under the terms of section
     4.  Replacing Invariant Sections with translations requires special
     permission from their copyright holders, but you may include
     translations of some or all Invariant Sections in addition to the
     original versions of these Invariant Sections.  You may include a
     translation of this License, and all the license notices in the
     Document, and any Warranty Disclaimers, provided that you also
     include the original English version of this License and the
     original versions of those notices and disclaimers.  In case of a
     disagreement between the translation and the original version of
     this License or a notice or disclaimer, the original version will
     prevail.

     If a section in the Document is Entitled "Acknowledgements",
     "Dedications", or "History", the requirement (section 4) to
     Preserve its Title (section 1) will typically require changing the
     actual title.

  9. TERMINATION

     You may not copy, modify, sublicense, or distribute the Document
     except as expressly provided for under this License.  Any other
     attempt to copy, modify, sublicense or distribute the Document is
     void, and will automatically terminate your rights under this
     License.  However, parties who have received copies, or rights,
     from you under this License will not have their licenses
     terminated so long as such parties remain in full compliance.

 10. FUTURE REVISIONS OF THIS LICENSE

     The Free Software Foundation may publish new, revised versions of
     the GNU Free Documentation License from time to time.  Such new
     versions will be similar in spirit to the present version, but may
     differ in detail to address new problems or concerns.  See
     `http://www.gnu.org/copyleft/'.

     Each version of the License is given a distinguishing version
     number.  If the Document specifies that a particular numbered
     version of this License "or any later version" applies to it, you
     have the option of following the terms and conditions either of
     that specified version or of any later version that has been
     published (not as a draft) by the Free Software Foundation.  If
     the Document does not specify a version number of this License,
     you may choose any version ever published (not as a draft) by the
     Free Software Foundation.

ADDENDUM: How to use this License for your documents
====================================================

To use this License in a document you have written, include a copy of
the License in the document and put the following copyright and license
notices just after the title page:

       Copyright (C)  YEAR  YOUR NAME.
       Permission is granted to copy, distribute and/or modify this document
       under the terms of the GNU Free Documentation License, Version 1.2
       or any later version published by the Free Software Foundation;
       with no Invariant Sections, no Front-Cover Texts, and no Back-Cover
       Texts.  A copy of the license is included in the section entitled ``GNU
       Free Documentation License''.

If you have Invariant Sections, Front-Cover Texts and Back-Cover Texts,
replace the "with...Texts." line with this:

         with the Invariant Sections being LIST THEIR TITLES, with
         the Front-Cover Texts being LIST, and with the Back-Cover Texts
         being LIST.

If you have Invariant Sections without Cover Texts, or some other
combination of the three, merge those two alternatives to suit the
situation.

If your document contains nontrivial examples of program code, we
recommend releasing these examples in parallel under your choice of
free software license, such as the GNU General Public License, to
permit their use in free software.


File: openocd.info,  Node: OpenOCD Concept Index,  Next: Command and Driver Index,  Prev: License,  Up: Top

OpenOCD Concept Index
*********************

 [index ]
* Menu:

* about:                                 About.               (line   6)
* adaptive clocking <1>:                 FAQ.                 (line   6)
* adaptive clocking:                     Debug Adapter Configuration.
                                                              (line 471)
* Architecture Specific Commands:        Architecture and Core Commands.
                                                              (line   6)
* ARM:                                   Architecture and Core Commands.
                                                              (line 258)
* ARM semihosting <1>:                   Architecture and Core Commands.
                                                              (line 299)
* ARM semihosting:                       OpenOCD Project Setup.
                                                              (line 316)
* ARM11:                                 Architecture and Core Commands.
                                                              (line 600)
* ARM7:                                  Architecture and Core Commands.
                                                              (line 319)
* ARM720T:                               Architecture and Core Commands.
                                                              (line 357)
* ARM9:                                  Architecture and Core Commands.
                                                              (line 319)
* ARM920T:                               Architecture and Core Commands.
                                                              (line 393)
* ARM926ej-s:                            Architecture and Core Commands.
                                                              (line 429)
* ARM966E:                               Architecture and Core Commands.
                                                              (line 443)
* ARMv4:                                 Architecture and Core Commands.
                                                              (line 312)
* ARMv5:                                 Architecture and Core Commands.
                                                              (line 312)
* ARMv6:                                 Architecture and Core Commands.
                                                              (line 597)
* ARMv7:                                 Architecture and Core Commands.
                                                              (line 634)
* at91sam3:                              Flash Commands.      (line 282)
* autoprobe:                             TAP Declaration.     (line 333)
* board config file:                     Config File Guidelines.
                                                              (line 129)
* breakpoint:                            General Commands.    (line 313)
* CFI:                                   Flash Commands.      (line 216)
* command line options:                  Running.             (line   6)
* commands:                              General Commands.    (line   6)
* Common Flash Interface:                Flash Commands.      (line 216)
* config command:                        Daemon Configuration.
                                                              (line  13)
* config file, board:                    Config File Guidelines.
                                                              (line 129)
* config file, interface:                Debug Adapter Configuration.
                                                              (line   6)
* config file, overview:                 OpenOCD Project Setup.
                                                              (line 140)
* config file, target:                   Config File Guidelines.
                                                              (line 314)
* config file, user:                     OpenOCD Project Setup.
                                                              (line 140)
* configuration stage:                   Daemon Configuration.
                                                              (line  13)
* Connecting to GDB:                     GDB and OpenOCD.     (line  29)
* Core Specific Commands:                Architecture and Core Commands.
                                                              (line   6)
* Cortex-M3:                             Architecture and Core Commands.
                                                              (line 664)
* CPU type:                              CPU Configuration.   (line  82)
* CPU variant:                           CPU Configuration.   (line  82)
* DAP:                                   Architecture and Core Commands.
                                                              (line 637)
* DCC:                                   Architecture and Core Commands.
                                                              (line 335)
* Debug Access Port:                     Architecture and Core Commands.
                                                              (line 637)
* developers:                            Developers.          (line   6)
* directory search:                      Running.             (line   6)
* disassemble:                           Architecture and Core Commands.
                                                              (line 269)
* dongles:                               Debug Adapter Hardware.
                                                              (line   6)
* dotted name:                           TAP Declaration.     (line 100)
* ETB:                                   Architecture and Core Commands.
                                                              (line  14)
* ETM:                                   Architecture and Core Commands.
                                                              (line  14)
* event, reset-init:                     Config File Guidelines.
                                                              (line 250)
* events <1>:                            CPU Configuration.   (line 382)
* events <2>:                            TAP Declaration.     (line 227)
* events:                                Reset Configuration. (line 215)
* faq:                                   FAQ.                 (line   6)
* flash configuration:                   Flash Commands.      (line  38)
* flash erasing:                         Flash Commands.      (line  96)
* flash programming:                     Flash Commands.      (line  96)
* flash protection:                      Flash Commands.      (line 189)
* flash reading:                         Flash Commands.      (line  96)
* flash writing:                         Flash Commands.      (line  96)
* FPGA:                                  PLD/FPGA Commands.   (line   6)
* FTDI:                                  Debug Adapter Hardware.
                                                              (line   6)
* GDB <1>:                               GDB and OpenOCD.     (line   6)
* GDB:                                   Daemon Configuration.
                                                              (line 134)
* GDB configuration:                     Daemon Configuration.
                                                              (line 134)
* GDB server:                            Daemon Configuration.
                                                              (line  91)
* GDB target:                            CPU Configuration.   (line   6)
* halt:                                  General Commands.    (line  77)
* image dumping:                         General Commands.    (line 265)
* image loading:                         General Commands.    (line 265)
* initialization:                        Daemon Configuration.
                                                              (line   6)
* interface config file:                 Debug Adapter Configuration.
                                                              (line   6)
* Jim-Tcl:                               About Jim-Tcl.       (line   6)
* jrc:                                   TAP Declaration.     (line 268)
* JTAG <1>:                              Debug Adapter Configuration.
                                                              (line 388)
* JTAG:                                  About.               (line  15)
* JTAG autoprobe:                        TAP Declaration.     (line 333)
* JTAG Commands:                         JTAG Commands.       (line   6)
* JTAG Route Controller:                 TAP Declaration.     (line 268)
* libdcc:                                Architecture and Core Commands.
                                                              (line 716)
* Linux-ARM DCC support:                 Architecture and Core Commands.
                                                              (line 716)
* logfile:                               Running.             (line   6)
* memory access:                         General Commands.    (line 231)
* message level:                         General Commands.    (line  54)
* mFlash commands:                       Flash Commands.      (line 807)
* mFlash Configuration:                  Flash Commands.      (line 791)
* NAND:                                  NAND Flash Commands. (line   6)
* NAND configuration:                    NAND Flash Commands. (line  63)
* NAND erasing:                          NAND Flash Commands. (line 148)
* NAND other commands:                   NAND Flash Commands. (line 243)
* NAND programming:                      NAND Flash Commands. (line 148)
* NAND reading:                          NAND Flash Commands. (line 113)
* NAND verification:                     NAND Flash Commands. (line 218)
* NAND writing:                          NAND Flash Commands. (line 161)
* object command:                        CPU Configuration.   (line 273)
* PLD:                                   PLD/FPGA Commands.   (line   6)
* port:                                  Daemon Configuration.
                                                              (line  81)
* printer port:                          Debug Adapter Hardware.
                                                              (line   6)
* profiling:                             General Commands.    (line 344)
* Programming using GDB:                 GDB and OpenOCD.     (line 126)
* reset:                                 General Commands.    (line  77)
* Reset Configuration:                   Reset Configuration. (line   6)
* reset-init handler:                    Config File Guidelines.
                                                              (line 250)
* RTCK <1>:                              FAQ.                 (line   6)
* RTCK <2>:                              Debug Adapter Configuration.
                                                              (line 471)
* RTCK:                                  Debug Adapter Hardware.
                                                              (line   6)
* scan chain:                            TAP Declaration.     (line  31)
* security:                              Daemon Configuration.
                                                              (line  81)
* Serial Peripheral Interface:           Debug Adapter Configuration.
                                                              (line 414)
* Serial Vector Format:                  Boundary Scan Commands.
                                                              (line  13)
* Serial Wire Debug:                     Debug Adapter Configuration.
                                                              (line 397)
* server:                                Daemon Configuration.
                                                              (line  81)
* SMI:                                   Flash Commands.      (line 249)
* SMP <1>:                               GDB and OpenOCD.     (line 164)
* SMP:                                   Config File Guidelines.
                                                              (line 449)
* SPI:                                   Debug Adapter Configuration.
                                                              (line 414)
* STMicroelectronics Serial Memory Interface: Flash Commands. (line 249)
* stmsmi:                                Flash Commands.      (line 249)
* str9xpec:                              Flash Commands.      (line 707)
* SVF:                                   Boundary Scan Commands.
                                                              (line  13)
* SWD:                                   Debug Adapter Configuration.
                                                              (line 397)
* TAP:                                   About.               (line  15)
* TAP configuration:                     TAP Declaration.     (line   6)
* TAP declaration:                       TAP Declaration.     (line   6)
* TAP events:                            TAP Declaration.     (line 227)
* TAP naming convention:                 TAP Declaration.     (line 131)
* TAP state names:                       JTAG Commands.       (line 147)
* target config file:                    Config File Guidelines.
                                                              (line 314)
* target events:                         CPU Configuration.   (line 382)
* target initialization:                 General Commands.    (line  77)
* target type:                           CPU Configuration.   (line  82)
* target, current:                       CPU Configuration.   (line  18)
* target, list:                          CPU Configuration.   (line  18)
* Tcl:                                   Tcl Crash Course.    (line   6)
* tcl:                                   About Jim-Tcl.       (line   6)
* Tcl Scripting API:                     Tcl Scripting API.   (line   6)
* Tcl scripts:                           Tcl Scripting API.   (line   6)
* TCP port:                              Daemon Configuration.
                                                              (line  81)
* TFTP:                                  TFTP.                (line   6)
* tracing:                               Architecture and Core Commands.
                                                              (line  14)
* translation:                           Config File Guidelines.
                                                              (line 591)
* Transport:                             Debug Adapter Configuration.
                                                              (line 370)
* USB Adapter:                           Debug Adapter Hardware.
                                                              (line   6)
* user config file:                      OpenOCD Project Setup.
                                                              (line 140)
* variable names:                        Config File Guidelines.
                                                              (line 216)
* vector_catch <1>:                      Architecture and Core Commands.
                                                              (line 378)
* vector_catch:                          OpenOCD Project Setup.
                                                              (line 215)
* vector_table:                          Architecture and Core Commands.
                                                              (line 584)
* watchpoint:                            General Commands.    (line 313)
* wiggler:                               Debug Adapter Hardware.
                                                              (line   6)
* Xilinx Serial Vector Format:           Boundary Scan Commands.
                                                              (line  25)
* XScale:                                Architecture and Core Commands.
                                                              (line 457)
* XSVF:                                  Boundary Scan Commands.
                                                              (line  25)
* zy1000:                                Debug Adapter Hardware.
                                                              (line   6)


File: openocd.info,  Node: Command and Driver Index,  Prev: OpenOCD Concept Index,  Up: Top

Command and Driver Index
************************

 [index ]
* Menu:

* $target_name arp_examine:              CPU Configuration.   (line 299)
* $target_name arp_halt:                 CPU Configuration.   (line 300)
* $target_name arp_poll:                 CPU Configuration.   (line 301)
* $target_name arp_reset:                CPU Configuration.   (line 302)
* $target_name arp_waitstate:            CPU Configuration.   (line 303)
* $target_name array2mem:                CPU Configuration.   (line 308)
* $target_name cget:                     CPU Configuration.   (line 329)
* $target_name configure:                CPU Configuration.   (line 225)
* $target_name curstate:                 CPU Configuration.   (line 353)
* $target_name eventlist:                CPU Configuration.   (line 357)
* $target_name invoke-event:             CPU Configuration.   (line 361)
* $target_name mdb:                      CPU Configuration.   (line 368)
* $target_name mdh:                      CPU Configuration.   (line 367)
* $target_name mdw:                      CPU Configuration.   (line 366)
* $target_name mem2array:                CPU Configuration.   (line 309)
* $target_name mwb:                      CPU Configuration.   (line 376)
* $target_name mwh:                      CPU Configuration.   (line 375)
* $target_name mww:                      CPU Configuration.   (line 374)
* adapter_khz:                           Debug Adapter Configuration.
                                                              (line 455)
* adapter_name:                          Debug Adapter Configuration.
                                                              (line  56)
* adapter_nsrst_assert_width:            Reset Configuration. (line 123)
* adapter_nsrst_delay:                   Reset Configuration. (line 128)
* add_script_search_dir:                 General Commands.    (line  72)
* aduc702x:                              Flash Commands.      (line 273)
* amt_jtagaccel:                         Debug Adapter Configuration.
                                                              (line  65)
* append_file:                           General Commands.    (line 193)
* arm core_state:                        Architecture and Core Commands.
                                                              (line 263)
* arm disassemble:                       Architecture and Core Commands.
                                                              (line 269)
* arm mcr:                               Architecture and Core Commands.
                                                              (line 283)
* arm mrc:                               Architecture and Core Commands.
                                                              (line 289)
* arm reg:                               Architecture and Core Commands.
                                                              (line 295)
* arm semihosting:                       Architecture and Core Commands.
                                                              (line 299)
* arm-jtag-ew:                           Debug Adapter Configuration.
                                                              (line  78)
* arm11 memwrite burst:                  Architecture and Core Commands.
                                                              (line 601)
* arm11 memwrite error_fatal:            Architecture and Core Commands.
                                                              (line 611)
* arm11 step_irq_enable:                 Architecture and Core Commands.
                                                              (line 617)
* arm11 vcr:                             Architecture and Core Commands.
                                                              (line 622)
* arm720t cp15:                          Architecture and Core Commands.
                                                              (line 363)
* arm7_9 dbgrq:                          Architecture and Core Commands.
                                                              (line 325)
* arm7_9 dcc_downloads:                  Architecture and Core Commands.
                                                              (line 335)
* arm7_9 fast_memory_access:             Architecture and Core Commands.
                                                              (line 346)
* arm9 vector_catch:                     Architecture and Core Commands.
                                                              (line 378)
* arm920t cache_info:                    Architecture and Core Commands.
                                                              (line 399)
* arm920t cp15:                          Architecture and Core Commands.
                                                              (line 404)
* arm920t cp15i:                         Architecture and Core Commands.
                                                              (line 410)
* arm920t read_cache:                    Architecture and Core Commands.
                                                              (line 421)
* arm920t read_mmu:                      Architecture and Core Commands.
                                                              (line 424)
* arm926ejs cache_info:                  Architecture and Core Commands.
                                                              (line 438)
* arm966e cp15:                          Architecture and Core Commands.
                                                              (line 448)
* armjtagew_info:                        Debug Adapter Configuration.
                                                              (line  82)
* at91rm9200:                            Debug Adapter Configuration.
                                                              (line  85)
* at91sam3:                              Flash Commands.      (line 282)
* at91sam3 gpnvm:                        Flash Commands.      (line 318)
* at91sam3 gpnvm clear:                  Flash Commands.      (line 319)
* at91sam3 gpnvm set:                    Flash Commands.      (line 320)
* at91sam3 gpnvm show:                   Flash Commands.      (line 321)
* at91sam3 info:                         Flash Commands.      (line 327)
* at91sam3 slowclk:                      Flash Commands.      (line 337)
* at91sam7:                              Flash Commands.      (line 341)
* at91sam7 gpnvm:                        Flash Commands.      (line 380)
* at91sam9:                              NAND Flash Commands. (line 285)
* at91sam9 ale:                          NAND Flash Commands. (line 301)
* at91sam9 ce:                           NAND Flash Commands. (line 314)
* at91sam9 cle:                          NAND Flash Commands. (line 297)
* at91sam9 rdy_busy:                     NAND Flash Commands. (line 308)
* avr:                                   Flash Commands.      (line 389)
* bp:                                    General Commands.    (line 318)
* cat:                                   General Commands.    (line 198)
* cfi:                                   Flash Commands.      (line 216)
* cortex_m3 maskisr:                     Architecture and Core Commands.
                                                              (line 665)
* cortex_m3 reset_config:                Architecture and Core Commands.
                                                              (line 699)
* cortex_m3 vector_catch:                Architecture and Core Commands.
                                                              (line 683)
* cp:                                    General Commands.    (line 201)
* dap apid:                              Architecture and Core Commands.
                                                              (line 642)
* dap apsel:                             Architecture and Core Commands.
                                                              (line 646)
* dap baseaddr:                          Architecture and Core Commands.
                                                              (line 649)
* dap info:                              Architecture and Core Commands.
                                                              (line 653)
* dap memaccess:                         Architecture and Core Commands.
                                                              (line 657)
* davinci:                               NAND Flash Commands. (line 320)
* debug_level:                           General Commands.    (line  54)
* drscan:                                JTAG Commands.       (line  47)
* dummy <1>:                             Architecture and Core Commands.
                                                              (line 199)
* dummy:                                 Debug Adapter Configuration.
                                                              (line  89)
* dump_image:                            General Commands.    (line 266)
* echo:                                  General Commands.    (line  63)
* ecosflash:                             Flash Commands.      (line 393)
* ep93xx:                                Debug Adapter Configuration.
                                                              (line  92)
* etb:                                   Architecture and Core Commands.
                                                              (line 208)
* etb config:                            Architecture and Core Commands.
                                                              (line 212)
* etb trigger_percent:                   Architecture and Core Commands.
                                                              (line 216)
* etm analyze:                           Architecture and Core Commands.
                                                              (line 175)
* etm config:                            Architecture and Core Commands.
                                                              (line  65)
* etm dump:                              Architecture and Core Commands.
                                                              (line 179)
* etm image:                             Architecture and Core Commands.
                                                              (line 182)
* etm info:                              Architecture and Core Commands.
                                                              (line  90)
* etm load:                              Architecture and Core Commands.
                                                              (line 185)
* etm start:                             Architecture and Core Commands.
                                                              (line 188)
* etm status:                            Architecture and Core Commands.
                                                              (line  96)
* etm stop:                              Architecture and Core Commands.
                                                              (line 191)
* etm tracemode:                         Architecture and Core Commands.
                                                              (line 102)
* etm trigger_debug:                     Architecture and Core Commands.
                                                              (line 123)
* etm_dummy config:                      Architecture and Core Commands.
                                                              (line 205)
* exit:                                  General Commands.    (line  31)
* fast_load:                             General Commands.    (line 270)
* fast_load_image:                       General Commands.    (line 274)
* flash bank:                            Flash Commands.      (line  40)
* flash banks:                           Flash Commands.      (line  77)
* flash erase_address:                   Flash Commands.      (line 129)
* flash erase_check:                     Flash Commands.      (line 190)
* flash erase_sector:                    Flash Commands.      (line 123)
* flash fillb:                           Flash Commands.      (line 142)
* flash fillh:                           Flash Commands.      (line 141)
* flash fillw:                           Flash Commands.      (line 140)
* flash info:                            Flash Commands.      (line 194)
* flash list:                            Flash Commands.      (line  82)
* flash probe:                           Flash Commands.      (line  87)
* flash protect:                         Flash Commands.      (line 199)
* flash write_bank:                      Flash Commands.      (line 153)
* flash write_image:                     Flash Commands.      (line 158)
* flush_count:                           JTAG Commands.       (line  75)
* fm3:                                   Flash Commands.      (line 696)
* ft2232:                                Debug Adapter Configuration.
                                                              (line  96)
* ft2232_device_desc:                    Debug Adapter Configuration.
                                                              (line 101)
* ft2232_latency:                        Debug Adapter Configuration.
                                                              (line 175)
* ft2232_layout:                         Debug Adapter Configuration.
                                                              (line 115)
* ft2232_serial:                         Debug Adapter Configuration.
                                                              (line 107)
* ft2232_vid_pid:                        Debug Adapter Configuration.
                                                              (line 169)
* gdb_breakpoint_override:               Daemon Configuration.
                                                              (line 140)
* gdb_flash_program:                     Daemon Configuration.
                                                              (line 147)
* gdb_memory_map:                        Daemon Configuration.
                                                              (line 151)
* gdb_port:                              Daemon Configuration.
                                                              (line  91)
* gdb_report_data_abort:                 Daemon Configuration.
                                                              (line 159)
* gw16012:                               Debug Adapter Configuration.
                                                              (line 225)
* halt:                                  General Commands.    (line 116)
* help:                                  General Commands.    (line  34)
* init:                                  Daemon Configuration.
                                                              (line  48)
* init_reset:                            Reset Configuration. (line 247)
* interface:                             Debug Adapter Configuration.
                                                              (line  43)
* interface transports:                  Debug Adapter Configuration.
                                                              (line  50)
* interface_list:                        Debug Adapter Configuration.
                                                              (line  46)
* ip:                                    General Commands.    (line 204)
* irscan:                                JTAG Commands.       (line  86)
* jlink:                                 Debug Adapter Configuration.
                                                              (line 235)
* jtag arp_init:                         Reset Configuration. (line 265)
* jtag arp_init-reset:                   Reset Configuration. (line 275)
* jtag cget:                             TAP Declaration.     (line 214)
* jtag configure:                        TAP Declaration.     (line 215)
* jtag names:                            TAP Declaration.     (line  84)
* jtag newtap:                           TAP Declaration.     (line 124)
* jtag tapdisable:                       TAP Declaration.     (line 314)
* jtag tapenable:                        TAP Declaration.     (line 319)
* jtag tapisenabled:                     TAP Declaration.     (line 324)
* jtag_init:                             Daemon Configuration.
                                                              (line  66)
* jtag_ntrst_assert_width:               Reset Configuration. (line 135)
* jtag_ntrst_delay:                      Reset Configuration. (line 140)
* jtag_rclk:                             Debug Adapter Configuration.
                                                              (line 471)
* jtag_reset:                            JTAG Commands.       (line 103)
* load_image:                            General Commands.    (line 286)
* log_output:                            General Commands.    (line  68)
* lpc2000:                               Flash Commands.      (line 398)
* lpc2000 part_id:                       Flash Commands.      (line 433)
* lpc288x:                               Flash Commands.      (line 437)
* lpc2900:                               Flash Commands.      (line 445)
* lpc2900 password:                      Flash Commands.      (line 502)
* lpc2900 read_custom:                   Flash Commands.      (line 491)
* lpc2900 secure_jtag:                   Flash Commands.      (line 539)
* lpc2900 secure_sector:                 Flash Commands.      (line 524)
* lpc2900 signature:                     Flash Commands.      (line 482)
* lpc2900 write_custom:                  Flash Commands.      (line 512)
* lpc3180:                               NAND Flash Commands. (line 333)
* lpc3180 select:                        NAND Flash Commands. (line 337)
* ls:                                    General Commands.    (line 207)
* mac:                                   General Commands.    (line 210)
* mdb:                                   General Commands.    (line 245)
* mdh:                                   General Commands.    (line 244)
* mdw:                                   General Commands.    (line 243)
* meminfo:                               General Commands.    (line 213)
* mflash bank:                           Flash Commands.      (line 792)
* mflash config boot:                    Flash Commands.      (line 815)
* mflash config pll:                     Flash Commands.      (line 808)
* mflash config storage:                 Flash Commands.      (line 819)
* mflash dump:                           Flash Commands.      (line 823)
* mflash probe:                          Flash Commands.      (line 827)
* mflash write:                          Flash Commands.      (line 830)
* mwb:                                   General Commands.    (line 256)
* mwh:                                   General Commands.    (line 255)
* mww:                                   General Commands.    (line 254)
* nand check_bad_blocks:                 NAND Flash Commands. (line 244)
* nand device:                           NAND Flash Commands. (line  67)
* nand dump:                             NAND Flash Commands. (line 113)
* nand erase:                            NAND Flash Commands. (line 148)
* nand info:                             NAND Flash Commands. (line 256)
* nand list:                             NAND Flash Commands. (line  93)
* nand probe:                            NAND Flash Commands. (line 103)
* nand raw_access:                       NAND Flash Commands. (line 261)
* nand verify:                           NAND Flash Commands. (line 218)
* nand write:                            NAND Flash Commands. (line 161)
* ocl:                                   Flash Commands.      (line 547)
* oocd_trace:                            Architecture and Core Commands.
                                                              (line 237)
* oocd_trace config:                     Architecture and Core Commands.
                                                              (line 246)
* oocd_trace resync:                     Architecture and Core Commands.
                                                              (line 250)
* oocd_trace status:                     Architecture and Core Commands.
                                                              (line 253)
* orion:                                 NAND Flash Commands. (line 347)
* parport:                               Debug Adapter Configuration.
                                                              (line 238)
* parport_cable:                         Debug Adapter Configuration.
                                                              (line 244)
* parport_port:                          Debug Adapter Configuration.
                                                              (line  70)
* parport_toggling_time:                 Debug Adapter Configuration.
                                                              (line 293)
* parport_write_on_exit:                 Debug Adapter Configuration.
                                                              (line 329)
* pathmove:                              JTAG Commands.       (line 121)
* peek:                                  General Commands.    (line 217)
* pic32mx:                               Flash Commands.      (line 552)
* pic32mx pgm_word:                      Flash Commands.      (line 561)
* pic32mx unlock:                        Flash Commands.      (line 565)
* pld device:                            PLD/FPGA Commands.   (line  25)
* pld devices:                           PLD/FPGA Commands.   (line  30)
* pld load:                              PLD/FPGA Commands.   (line  33)
* poke:                                  General Commands.    (line 220)
* poll:                                  Daemon Configuration.
                                                              (line 203)
* power:                                 Debug Adapter Configuration.
                                                              (line 365)
* presto:                                Debug Adapter Configuration.
                                                              (line 341)
* presto_serial:                         Debug Adapter Configuration.
                                                              (line 344)
* profile:                               General Commands.    (line 345)
* rbp:                                   General Commands.    (line 327)
* reg:                                   General Commands.    (line  84)
* reset:                                 General Commands.    (line 156)
* reset halt:                            General Commands.    (line 158)
* reset init:                            General Commands.    (line 159)
* reset run:                             General Commands.    (line 157)
* reset_config:                          Reset Configuration. (line 145)
* resume:                                General Commands.    (line 147)
* rlink:                                 Debug Adapter Configuration.
                                                              (line 347)
* rm:                                    General Commands.    (line 223)
* rtck:                                  Debug Adapter Configuration.
                                                              (line  74)
* runtest:                               JTAG Commands.       (line 129)
* rwp:                                   General Commands.    (line 330)
* s3c2410:                               NAND Flash Commands. (line 355)
* s3c2412:                               NAND Flash Commands. (line 356)
* s3c2440:                               NAND Flash Commands. (line 357)
* s3c2443:                               NAND Flash Commands. (line 358)
* s3c6400:                               NAND Flash Commands. (line 359)
* scan_chain:                            TAP Declaration.     (line  92)
* shutdown:                              General Commands.    (line  50)
* sleep:                                 General Commands.    (line  44)
* soft_reset_halt:                       General Commands.    (line 176)
* stellaris:                             Flash Commands.      (line 569)
* stellaris recover bank_id:             Flash Commands.      (line 578)
* step:                                  General Commands.    (line 152)
* stm32f1x:                              Flash Commands.      (line 591)
* stm32f1x lock:                         Flash Commands.      (line 602)
* stm32f1x options_read:                 Flash Commands.      (line 610)
* stm32f1x options_write:                Flash Commands.      (line 616)
* stm32f1x unlock:                       Flash Commands.      (line 606)
* stm32f2x:                              Flash Commands.      (line 620)
* stmsmi:                                Flash Commands.      (line 249)
* str7x:                                 Flash Commands.      (line 627)
* str7x disable_jtag:                    Flash Commands.      (line 635)
* str9x:                                 Flash Commands.      (line 639)
* str9x flash_config:                    Flash Commands.      (line 648)
* str9xpec:                              Flash Commands.      (line 742)
* str9xpec disable_turbo:                Flash Commands.      (line 750)
* str9xpec enable_turbo:                 Flash Commands.      (line 753)
* str9xpec lock:                         Flash Commands.      (line 757)
* str9xpec options_cmap:                 Flash Commands.      (line 764)
* str9xpec options_lvdsel:               Flash Commands.      (line 767)
* str9xpec options_lvdthd:               Flash Commands.      (line 770)
* str9xpec options_lvdwarn:              Flash Commands.      (line 773)
* str9xpec options_read:                 Flash Commands.      (line 776)
* str9xpec options_write:                Flash Commands.      (line 779)
* str9xpec part_id:                      Flash Commands.      (line 761)
* str9xpec unlock:                       Flash Commands.      (line 782)
* svf:                                   Boundary Scan Commands.
                                                              (line  18)
* swd newdap:                            Debug Adapter Configuration.
                                                              (line 404)
* swd wcr trn prescale:                  Debug Adapter Configuration.
                                                              (line 408)
* target count:                          CPU Configuration.   (line  38)
* target create:                         CPU Configuration.   (line 201)
* target current:                        CPU Configuration.   (line  51)
* target names:                          CPU Configuration.   (line  54)
* target number:                         CPU Configuration.   (line  60)
* target types:                          CPU Configuration.   (line 100)
* target_request debugmsgs:              Architecture and Core Commands.
                                                              (line 757)
* targets:                               CPU Configuration.   (line  69)
* tcl_port:                              Daemon Configuration.
                                                              (line 117)
* telnet_port:                           Daemon Configuration.
                                                              (line 125)
* test_image:                            General Commands.    (line 299)
* tms470:                                Flash Commands.      (line 661)
* tms470 flash_keyset:                   Flash Commands.      (line 668)
* tms470 osc_mhz:                        Flash Commands.      (line 672)
* tms470 plldis:                         Flash Commands.      (line 675)
* trace history:                         Architecture and Core Commands.
                                                              (line 767)
* trace point:                           Architecture and Core Commands.
                                                              (line 773)
* transport list:                        Debug Adapter Configuration.
                                                              (line 375)
* transport select:                      Debug Adapter Configuration.
                                                              (line 379)
* trunc:                                 General Commands.    (line 226)
* usb_blaster:                           Debug Adapter Configuration.
                                                              (line 194)
* usb_blaster_device_desc:               Debug Adapter Configuration.
                                                              (line 200)
* usb_blaster_vid_pid:                   Debug Adapter Configuration.
                                                              (line 206)
* usbprog:                               Debug Adapter Configuration.
                                                              (line 350)
* verify_image:                          General Commands.    (line 305)
* verify_ircapture:                      JTAG Commands.       (line 134)
* verify_jtag:                           JTAG Commands.       (line 140)
* version:                               General Commands.    (line 350)
* virt2phys:                             General Commands.    (line 353)
* virtex2:                               PLD/FPGA Commands.   (line  44)
* virtex2 read_stat:                     PLD/FPGA Commands.   (line  50)
* virtual:                               Flash Commands.      (line 679)
* vsllink:                               Debug Adapter Configuration.
                                                              (line 353)
* wait_halt:                             General Commands.    (line 117)
* wp:                                    General Commands.    (line 333)
* xscale analyze_trace:                  Architecture and Core Commands.
                                                              (line 530)
* xscale cache_clean_address:            Architecture and Core Commands.
                                                              (line 533)
* xscale cache_info:                     Architecture and Core Commands.
                                                              (line 536)
* xscale cp15:                           Architecture and Core Commands.
                                                              (line 539)
* xscale dcache:                         Architecture and Core Commands.
                                                              (line 546)
* xscale debug_handler:                  Architecture and Core Commands.
                                                              (line 543)
* xscale dump_trace:                     Architecture and Core Commands.
                                                              (line 549)
* xscale icache:                         Architecture and Core Commands.
                                                              (line 552)
* xscale mmu:                            Architecture and Core Commands.
                                                              (line 555)
* xscale trace_buffer:                   Architecture and Core Commands.
                                                              (line 559)
* xscale trace_image:                    Architecture and Core Commands.
                                                              (line 563)
* xscale vector_catch:                   Architecture and Core Commands.
                                                              (line 569)
* xscale vector_table:                   Architecture and Core Commands.
                                                              (line 584)
* xsvf:                                  Boundary Scan Commands.
                                                              (line  33)
* ZY1000:                                Debug Adapter Configuration.
                                                              (line 359)


