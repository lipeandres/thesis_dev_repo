#include <sys/time.h>
#include <unistd.h>
#include <termios.h>
#include <string.h>
#include <iostream>
#include <stdio.h>
#include <stdlib.h>

extern "C"
{
#include <serial_helper.h>
}

using namespace std;

struct comInfo{
int com_size;
char command[32];
char answer[32];
};

typedef struct  comInfo ComInfo;

void stmRead	(int,ComInfo*);
void stmWrite	(int,ComInfo*);
void cleanComObject(ComInfo*);
ComInfo *comObjectPtr= new ComInfo;
unsigned char inBuffer[sizeof(*comObjectPtr)];

int main()
{
    int ttyfd = serial_open ("/dev/ttySP1", 115200, CLOCAL | CREAD | CS8, 1);

	//ComInfo *comObjectPtr= new ComInfo;
	strcpy(comObjectPtr->command,"AT E0\r");
	//stmWrite(ttyfd,comObjectPtr);
	int i=0;	
	while(true){	
	//stmRead(ttyfd,comObjectPtr);
	comObjectPtr->com_size=125;
	stmWrite(ttyfd,comObjectPtr);
	//usleep(30*1000);
        printf("Read from Stm started ...\n");	
	stmRead(ttyfd,comObjectPtr);
	printf("\n");	
	while(comObjectPtr->answer[i]!=0)
	{
	printf("%c\n",comObjectPtr->answer[i]);
	i++;
	}
	i=0;	
	printf("\n");
	cleanComObject(comObjectPtr);
	strcpy(comObjectPtr->command,"AT I\n\r");
	usleep(300*1000);
	}
return 0;
}


void stmWrite (int ttyPort,ComInfo* comObjectPtr){
	unsigned char outBuffer[sizeof(*comObjectPtr)];	
	printf("Write to Stm started ...\n");
	memcpy(outBuffer,comObjectPtr,sizeof(*comObjectPtr));
	write (ttyPort, outBuffer, sizeof(*comObjectPtr));
	//printf("Wrote %c to Stm\n",comObjectPtr->command);
	return;
}

void stmRead (int ttyPort,ComInfo* comObjectPtr){
	//unsigned char inBuffer[sizeof(*comObjectPtr)];
	//printf("Read from Stm started ...\n");
	
	read  (ttyPort, inBuffer, sizeof(*comObjectPtr));
	printf("Read command OK...\n");
	//cleanComObject(comObjectPtr);
	memcpy(comObjectPtr,inBuffer,sizeof(*comObjectPtr));
	//for(int i=0;i<sizeof(*comObjectPtr);i++)
	//inBuffer[i]= 0;	
	printf("Read from Stm correct\n");
	return;
}

void cleanComObject(ComInfo* comObjectPtr){
//comObjectPtr->com_size=0;
//memset(comObjectPtr->command, 0, sizeof(comObjectPtr->command));
//for(int i=0;i<sizeof(*comObjectPtr);i++)
//inBuffer[i]= 0;
//for(int i=0;i<32;i++)
//comObjectPtr->answer[i]= 0;
//memcpy(comObjectPtr,inBuffer,sizeof(*comObjectPtr));
}

